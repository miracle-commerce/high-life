(()=>{var __webpack_modules__={"../armada/dist/utils/isArmadaLoaded.js":
/*!**********************************************!*\
  !*** ../armada/dist/utils/isArmadaLoaded.js ***!
  \**********************************************/module=>{eval('(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(self, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t"use strict";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ "./src/utilities/isArmadaLoaded.ts":\n/*!*****************************************!*\\\n  !*** ./src/utilities/isArmadaLoaded.ts ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, exports) => {\n\n\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nexports.isArmadaLoaded = void 0;\r\nconst isArmadaLoaded = (callback) => {\r\n    var _a, _b;\r\n    const isLoaded = ((_b = (_a = window.eight) === null || _a === void 0 ? void 0 : _a.armada) === null || _b === void 0 ? void 0 : _b.loaded) === true;\r\n    if (!callback) {\r\n        return isLoaded;\r\n    }\r\n    if (isLoaded) {\r\n        callback();\r\n    }\r\n    else {\r\n        document.addEventListener(\'ARMADA:LOADED\', callback);\r\n    }\r\n};\r\nexports.isArmadaLoaded = isArmadaLoaded;\r\nexports.default = exports.isArmadaLoaded;\r\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can\'t be inlined\n/******/ \tvar __webpack_exports__ = {};\n/******/ \t__webpack_modules__["./src/utilities/isArmadaLoaded.ts"](0, __webpack_exports__);\n/******/ \t\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=isArmadaLoaded.js.map\n\n//# sourceURL=webpack://quay/../armada/dist/utils/isArmadaLoaded.js?')},"./src/scripts/components/form-errors.js":
/*!***********************************************!*\
  !*** ./src/scripts/components/form-errors.js ***!
  \***********************************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _weareeight_armada_dist_utils_isArmadaLoaded__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @weareeight/armada/dist/utils/isArmadaLoaded */ \"../armada/dist/utils/isArmadaLoaded.js\");\n/* harmony import */ var _weareeight_armada_dist_utils_isArmadaLoaded__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_weareeight_armada_dist_utils_isArmadaLoaded__WEBPACK_IMPORTED_MODULE_0__);\n/*\nTriggers a form error message notification. Example usage:\n{% if form.errors %}\n  <form-errors data-form-type=\"customer\" data-form-name=\"Newsletter\" data-errors='{{ form.errors | default_errors }}'></form-errors>\n  <script src=\"{{ 'component-form-errors.min.js' | asset_url }}\" defer=\"defer\" type=\"module\"><\/script>\n{% endif %}\n*/\n\n\n\nclass FormErrors extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    (0,_weareeight_armada_dist_utils_isArmadaLoaded__WEBPACK_IMPORTED_MODULE_0__.isArmadaLoaded)(this.init.bind(this));\n  }\n\n  init() {\n    document.addEventListener(\"ARMADA:NOTIFICATIONS:LOADED\", () => this.onFormSubmit(this.formType, this.errors));\n  }\n\n  onFormSubmit(formType, errors) {\n    const submittedFormType = new URLSearchParams(window.location.search).get('form_type');\n    // If a different form type was submitted, do nothing\n    if (submittedFormType && formType != submittedFormType) return;\n\n    // Find the first form of the type submitted and handle notification\n    const formError = document.querySelector(`[data-form-type=${formType}]`);\n    const formName = formError.dataset.formName;\n    const form = formError.closest('form');\n    this.handleNotification(formName, errors, form);\n  }\n\n  handleNotification(formName, errors, form) {\n    if (!errors) return;\n    this.showNotification(formName, errors);\n    this.scrollToForm(form);\n  }\n\n  showNotification(formName, errors) {\n    const message = `Error(s) in ${formName} form`;\n    this.clearList(); // Prevents duplicate notifications when multiple forms of same type on one page\n    window.eight.notifications.addToList({\n      type: 'error',\n      message: message,\n      data: {\n        info: errors\n      },\n      dismissible: false,\n      error: true\n    })\n  }\n\n  scrollToForm(form) {\n    setTimeout(() => {\n      form.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      // Clear error notification when focus on form\n      form.addEventListener('focusin', () => this.clearErrors());\n    }, 500)\n  }\n\n  clearErrors() {\n    window.eight.notifications.clearErrors();\n  }\n\n  clearList() {\n    window.eight.notifications.clearList();\n  }\n\n  get formType() {\n    return this.getAttribute('data-form-type');\n  }\n\n  get errors() {\n    return this.getAttribute('data-errors');\n  }\n}\n\ncustomElements.define('form-errors', FormErrors);\n\n\n//# sourceURL=webpack://quay/./src/scripts/components/form-errors.js?")}},__webpack_module_cache__={};function __webpack_require__(e){var r=__webpack_module_cache__[e];if(void 0!==r)return r.exports;var o=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](o,o.exports,__webpack_require__),o.exports}__webpack_require__.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(r,{a:r}),r},__webpack_require__.d=(e,r)=>{for(var o in r)__webpack_require__.o(r,o)&&!__webpack_require__.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:r[o]})},__webpack_require__.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/scripts/components/form-errors.js")})();